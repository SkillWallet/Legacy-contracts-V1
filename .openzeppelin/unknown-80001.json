{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb0757FC085D51fF447091115Ce3535EEE9C9A464",
    "txHash": "0xff6ef7bf475b38cf8626d24912ae9289e21846f5f5b5872529302ebb2b6bedde",
    "deployTransaction": {
      "hash": "0xff6ef7bf475b38cf8626d24912ae9289e21846f5f5b5872529302ebb2b6bedde",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x25f3b360603b4ef2094AB2D7CF7Cc024e944Cd40",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 163,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x26fe30f479d9c3876219e1fc02d0b198527dc27daf95abefe849b30b781e7880",
      "s": "0x40434881cd8edb6f100c35c6c8f12e8695bd7741819d9df2140205b379149806",
      "v": 160038,
      "creates": "0xb0757FC085D51fF447091115Ce3535EEE9C9A464",
      "chainId": 80001
    }
  },
  "proxies": [
    {
      "address": "0x74Ffbe0865bd808F7CD5beD34D879A78EFc503Cc",
      "txHash": "0x00413259c1dd2457a58c94eb5f352549e723ac3a9db2da8463e16264eed035c4",
      "kind": "transparent"
    },
    {
      "address": "0xbc83Dff75363161616729B760AB8814c8CD55D1c",
      "txHash": "0xf47fe6713f581530e97537fd0614668db5c13c2769cd2eae5b8878800ac0ef0c",
      "kind": "transparent"
    },
    {
      "address": "0xc23cF3edd00B48E6bEa853167772BCFd6A39200D",
      "txHash": "0x116e73edebcb732e0b578213ba56bea32a7cc42c5b6bdcfbcc16fe6411063e78",
      "kind": "transparent"
    },
    {
      "address": "0x2d5F9858a1656163327908D623cfe1255fd589Fa",
      "txHash": "0xbc6fa267db729843ece1719a77427badc86960ffd60f03560b6da73e87777a87",
      "kind": "transparent"
    },
    {
      "address": "0x340B0022c77F725BeD2d8F8DbB6721dbe2bC4846",
      "txHash": "0x6de5b7d9a2e6cbdc5e1bd2fd7375d7cd3df83163ba35ca8710b25bd9ef20e32d",
      "kind": "transparent"
    },
    {
      "address": "0xE9c70545Beeb7768879A4861B53E250F6ED60459",
      "txHash": "0xd7db60b8097423609f9d435ac9f499a618dd727a37a80f5180caf798a88f2035",
      "kind": "transparent"
    },
    {
      "address": "0xEe0205E908416C4a61D0118ff269C019EAA48F5E",
      "txHash": "0x7fb952b9494bb7c4b66a64ec319cb0be5ad8047307965fa568e20b5dae36b7fe",
      "kind": "transparent"
    },
    {
      "address": "0x1e7417D5b5D5DB961E74D3637B73d9952e02225c",
      "txHash": "0x10e85541a3e1cff1b586beb1d8a5446ac2a50c306e99feabe1a70bc3f8723600",
      "kind": "transparent"
    },
    {
      "address": "0x1F0bb9cb02F91a075c4F0533417f233A73F7cFD6",
      "txHash": "0x4f30d24b69feb0e51b8a316e3a644fc13b89852c6e4246a7d09cb1d3de16d3d6",
      "kind": "transparent"
    },
    {
      "address": "0xe5f83A22342EaCC62E263064033Bf3A57739cBd2",
      "txHash": "0x2861f7c649ee49fa95ed6fb10e9482265bbaa5f1af0d95c77bf2c2ccb6db7d5b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6c5a112670d9cf73e4398b02bd40740aec95e80605da2257fc4e46654c0455b5": {
      "address": "0x187D5ba200A399FF295372c3774799d8B2eCac78",
      "txHash": "0xf1cf5328eca6adc7e99420329bf8bd7306d0dde272177f8e9f217e63b33eec9c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)5629_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5006_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "SkillWallet",
            "label": "_activeCommunities",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/main/SkillWallet.sol:33"
          },
          {
            "contract": "SkillWallet",
            "label": "_communityHistory",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/main/SkillWallet.sol:36"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletsByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:39"
          },
          {
            "contract": "SkillWallet",
            "label": "_activatedSkillWallets",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/main/SkillWallet.sol:42"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletToPubKey",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/main/SkillWallet.sol:44"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletClaimers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:46"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletCounter",
            "type": "t_struct(Counter)4632_storage",
            "src": "contracts/main/SkillWallet.sol:48"
          },
          {
            "contract": "SkillWallet",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:50"
          },
          {
            "contract": "SkillWallet",
            "label": "jobId",
            "type": "t_bytes32",
            "src": "contracts/main/SkillWallet.sol:51"
          },
          {
            "contract": "SkillWallet",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/main/SkillWallet.sol:52"
          },
          {
            "contract": "SkillWallet",
            "label": "osm",
            "type": "t_contract(OffchainSignatureMechanism)9171",
            "src": "contracts/main/SkillWallet.sol:53"
          },
          {
            "contract": "SkillWallet",
            "label": "clReqIdToValidationRequest",
            "type": "t_mapping(t_bytes32,t_struct(SWValidationRequest)8519_storage)",
            "src": "contracts/main/SkillWallet.sol:55"
          },
          {
            "contract": "SkillWallet",
            "label": "validReqIds",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/main/SkillWallet.sol:58"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)4632_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(OffchainSignatureMechanism)9171": {
            "label": "contract OffchainSignatureMechanism"
          },
          "t_mapping(t_bytes32,t_struct(SWValidationRequest)8519_storage)": {
            "label": "mapping(bytes32 => struct Types.SWValidationRequest)"
          },
          "t_struct(SWValidationRequest)8519_storage": {
            "label": "struct Types.SWValidationRequest",
            "members": [
              {
                "label": "caller",
                "type": "t_address"
              },
              {
                "label": "action",
                "type": "t_enum(Action)8512"
              },
              {
                "label": "params",
                "type": "t_struct(Params)8529_storage"
              }
            ]
          },
          "t_enum(Action)8512": {
            "label": "enum Types.Action",
            "members": [
              "Activate",
              "Login",
              "CreateGig",
              "TakeGig",
              "SubmitGig",
              "CompleteGig"
            ]
          },
          "t_struct(Params)8529_storage": {
            "label": "struct Types.Params",
            "members": [
              {
                "label": "stringParams",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "intParams",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "addressParams",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)5629_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)5629_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5243_storage"
              }
            ]
          },
          "t_struct(Set)5243_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5006_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4688_storage"
              }
            ]
          },
          "t_struct(Map)4688_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4680_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)4680_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)4680_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fd8ede91ac702a3f697ce0c2a3cecac95f1281134db5eb0a59912b0fbd6473b0": {
      "address": "0xe1EFB4d8cf86A9093Ff19A452F2673dC4D6349e2",
      "txHash": "0xf0233db4ae38ed9ce7973f05ece8ec892abe910e38be761f8be461c4a3e40e87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "PartnersRegistry",
            "label": "distributedTown",
            "type": "t_contract(IDistributedTown)8667",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:17"
          },
          {
            "contract": "PartnersRegistry",
            "label": "agreements",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:18"
          },
          {
            "contract": "PartnersRegistry",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:19"
          },
          {
            "contract": "PartnersRegistry",
            "label": "linkToken",
            "type": "t_address",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:20"
          }
        ],
        "types": {
          "t_contract(IDistributedTown)8667": {
            "label": "contract IDistributedTown"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cae0c14fe0f13a52046ce39af51cc674ffab4160b2c3e9bf392849d6f47542ef": {
      "address": "0x32d3C6a534397aDDc0e5c62EF82DD8499ee22662",
      "txHash": "0xb3751a64469306fb1b3b6b9e9fc8336bbeb39faed278d12733b1092ba96a59fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "PartnersRegistry",
            "label": "distributedTown",
            "type": "t_contract(IDistributedTown)8667",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:17"
          },
          {
            "contract": "PartnersRegistry",
            "label": "agreements",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:18"
          },
          {
            "contract": "PartnersRegistry",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:19"
          },
          {
            "contract": "PartnersRegistry",
            "label": "linkToken",
            "type": "t_address",
            "src": "contracts/main/partnersAgreement/PartnersRegistry.sol:20"
          }
        ],
        "types": {
          "t_contract(IDistributedTown)8667": {
            "label": "contract IDistributedTown"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "379778eee27b05fa37fb073df60176a8f6ff6e973438cd726de74c4202223bc5": {
      "address": "0x9bd7b9030623ccdb5C9080B4de5542da6d5Fe6E2",
      "txHash": "0x343f53d61684bfb702b16b66747cc6c6970bc910e43af45ac4f84049fc518509",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)5629_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5006_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "SkillWallet",
            "label": "_activeCommunities",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/main/SkillWallet.sol:33"
          },
          {
            "contract": "SkillWallet",
            "label": "_communityHistory",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/main/SkillWallet.sol:36"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletsByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:39"
          },
          {
            "contract": "SkillWallet",
            "label": "_activatedSkillWallets",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/main/SkillWallet.sol:42"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletToPubKey",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/main/SkillWallet.sol:44"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletClaimers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:46"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletCounter",
            "type": "t_struct(Counter)4632_storage",
            "src": "contracts/main/SkillWallet.sol:48"
          },
          {
            "contract": "SkillWallet",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:50"
          },
          {
            "contract": "SkillWallet",
            "label": "jobId",
            "type": "t_bytes32",
            "src": "contracts/main/SkillWallet.sol:51"
          },
          {
            "contract": "SkillWallet",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/main/SkillWallet.sol:52"
          },
          {
            "contract": "SkillWallet",
            "label": "osmAddress",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:53"
          },
          {
            "contract": "SkillWallet",
            "label": "clReqIdToValidationRequest",
            "type": "t_mapping(t_bytes32,t_struct(SWValidationRequest)8519_storage)",
            "src": "contracts/main/SkillWallet.sol:55"
          },
          {
            "contract": "SkillWallet",
            "label": "validReqIds",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/main/SkillWallet.sol:58"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)4632_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(SWValidationRequest)8519_storage)": {
            "label": "mapping(bytes32 => struct Types.SWValidationRequest)"
          },
          "t_struct(SWValidationRequest)8519_storage": {
            "label": "struct Types.SWValidationRequest",
            "members": [
              {
                "label": "caller",
                "type": "t_address"
              },
              {
                "label": "action",
                "type": "t_enum(Action)8512"
              },
              {
                "label": "params",
                "type": "t_struct(Params)8529_storage"
              }
            ]
          },
          "t_enum(Action)8512": {
            "label": "enum Types.Action",
            "members": [
              "Activate",
              "Login",
              "CreateGig",
              "TakeGig",
              "SubmitGig",
              "CompleteGig"
            ]
          },
          "t_struct(Params)8529_storage": {
            "label": "struct Types.Params",
            "members": [
              {
                "label": "stringParams",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "intParams",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "addressParams",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)5629_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)5629_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5243_storage"
              }
            ]
          },
          "t_struct(Set)5243_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5006_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4688_storage"
              }
            ]
          },
          "t_struct(Map)4688_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4680_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)4680_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)4680_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1e9e85ddddb486cd735f7b1bbb65559e08795224eb7157c1f626571c1aa04988": {
      "address": "0x50Ed75cb0399EC83Cb73021Cdb05ABd432226F83",
      "txHash": "0xdebe447be97c4beed5b481f950e74b2c9ebedb6c518c3696c8066823091aca0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)5629_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5006_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "SkillWallet",
            "label": "_activeCommunities",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/main/SkillWallet.sol:33"
          },
          {
            "contract": "SkillWallet",
            "label": "_communityHistory",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/main/SkillWallet.sol:36"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletsByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:39"
          },
          {
            "contract": "SkillWallet",
            "label": "_activatedSkillWallets",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/main/SkillWallet.sol:42"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletToPubKey",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/main/SkillWallet.sol:44"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletClaimers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:46"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletCounter",
            "type": "t_struct(Counter)4632_storage",
            "src": "contracts/main/SkillWallet.sol:48"
          },
          {
            "contract": "SkillWallet",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:50"
          },
          {
            "contract": "SkillWallet",
            "label": "jobId",
            "type": "t_bytes32",
            "src": "contracts/main/SkillWallet.sol:51"
          },
          {
            "contract": "SkillWallet",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/main/SkillWallet.sol:52"
          },
          {
            "contract": "SkillWallet",
            "label": "osmAddress",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:53"
          },
          {
            "contract": "SkillWallet",
            "label": "clReqIdToValidationRequest",
            "type": "t_mapping(t_bytes32,t_struct(SWValidationRequest)8519_storage)",
            "src": "contracts/main/SkillWallet.sol:55"
          },
          {
            "contract": "SkillWallet",
            "label": "validReqIds",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/main/SkillWallet.sol:58"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)4632_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(SWValidationRequest)8519_storage)": {
            "label": "mapping(bytes32 => struct Types.SWValidationRequest)"
          },
          "t_struct(SWValidationRequest)8519_storage": {
            "label": "struct Types.SWValidationRequest",
            "members": [
              {
                "label": "caller",
                "type": "t_address"
              },
              {
                "label": "action",
                "type": "t_enum(Action)8512"
              },
              {
                "label": "params",
                "type": "t_struct(Params)8529_storage"
              }
            ]
          },
          "t_enum(Action)8512": {
            "label": "enum Types.Action",
            "members": [
              "Activate",
              "Login",
              "CreateGig",
              "TakeGig",
              "SubmitGig",
              "CompleteGig"
            ]
          },
          "t_struct(Params)8529_storage": {
            "label": "struct Types.Params",
            "members": [
              {
                "label": "stringParams",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "intParams",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "addressParams",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)5629_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)5629_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5243_storage"
              }
            ]
          },
          "t_struct(Set)5243_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5006_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4688_storage"
              }
            ]
          },
          "t_struct(Map)4688_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4680_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)4680_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)4680_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "649fab1624f4a44aad310f00cdafc65e66542a9d6510739498a592e056255d07": {
      "address": "0xa4705b8e9C6a57CA3986802724cD26E41fe39083",
      "txHash": "0x497030b45e9eaf97835b4a2233512ea6cb2382ba5d435206b51b0353df2b3354",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)5629_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5006_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "SkillWallet",
            "label": "_activeCommunities",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/main/SkillWallet.sol:33"
          },
          {
            "contract": "SkillWallet",
            "label": "_communityHistory",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/main/SkillWallet.sol:36"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletsByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:39"
          },
          {
            "contract": "SkillWallet",
            "label": "_activatedSkillWallets",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/main/SkillWallet.sol:42"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletToPubKey",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/main/SkillWallet.sol:44"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletClaimers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:46"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletCounter",
            "type": "t_struct(Counter)4632_storage",
            "src": "contracts/main/SkillWallet.sol:48"
          },
          {
            "contract": "SkillWallet",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:50"
          },
          {
            "contract": "SkillWallet",
            "label": "jobId",
            "type": "t_bytes32",
            "src": "contracts/main/SkillWallet.sol:51"
          },
          {
            "contract": "SkillWallet",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/main/SkillWallet.sol:52"
          },
          {
            "contract": "SkillWallet",
            "label": "osmAddress",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:53"
          },
          {
            "contract": "SkillWallet",
            "label": "clReqIdToValidationRequest",
            "type": "t_mapping(t_bytes32,t_struct(SWValidationRequest)8606_storage)",
            "src": "contracts/main/SkillWallet.sol:55"
          },
          {
            "contract": "SkillWallet",
            "label": "validReqIds",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/main/SkillWallet.sol:58"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)4632_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(SWValidationRequest)8606_storage)": {
            "label": "mapping(bytes32 => struct Types.SWValidationRequest)"
          },
          "t_struct(SWValidationRequest)8606_storage": {
            "label": "struct Types.SWValidationRequest",
            "members": [
              {
                "label": "caller",
                "type": "t_address"
              },
              {
                "label": "action",
                "type": "t_enum(Action)8599"
              },
              {
                "label": "params",
                "type": "t_struct(Params)8616_storage"
              }
            ]
          },
          "t_enum(Action)8599": {
            "label": "enum Types.Action",
            "members": [
              "Activate",
              "Login",
              "CreateGig",
              "TakeGig",
              "SubmitGig",
              "CompleteGig"
            ]
          },
          "t_struct(Params)8616_storage": {
            "label": "struct Types.Params",
            "members": [
              {
                "label": "stringParams",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "intParams",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "addressParams",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)5629_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)5629_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5243_storage"
              }
            ]
          },
          "t_struct(Set)5243_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5006_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4688_storage"
              }
            ]
          },
          "t_struct(Map)4688_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4680_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)4680_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)4680_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e20ed16783ad9b77db93e983a85427b416f15df9d5211767471a14390acb72e0": {
      "address": "0x55C2CB6c8A2D056c30e02A7BB176F21177d1a0c6",
      "txHash": "0x3aae71cd0e35b840da2f26bb640099cce1d645bd112033db7c69b47dc3bbd7ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)5629_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5006_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "SkillWallet",
            "label": "_activeCommunities",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/main/SkillWallet.sol:33"
          },
          {
            "contract": "SkillWallet",
            "label": "_communityHistory",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/main/SkillWallet.sol:36"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletsByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:39"
          },
          {
            "contract": "SkillWallet",
            "label": "_activatedSkillWallets",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/main/SkillWallet.sol:42"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletToPubKey",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/main/SkillWallet.sol:44"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletClaimers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:46"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletCounter",
            "type": "t_struct(Counter)4632_storage",
            "src": "contracts/main/SkillWallet.sol:48"
          },
          {
            "contract": "SkillWallet",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:50"
          },
          {
            "contract": "SkillWallet",
            "label": "jobId",
            "type": "t_bytes32",
            "src": "contracts/main/SkillWallet.sol:51"
          },
          {
            "contract": "SkillWallet",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/main/SkillWallet.sol:52"
          },
          {
            "contract": "SkillWallet",
            "label": "osmAddress",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:53"
          },
          {
            "contract": "SkillWallet",
            "label": "clReqIdToValidationRequest",
            "type": "t_mapping(t_bytes32,t_struct(SWValidationRequest)8606_storage)",
            "src": "contracts/main/SkillWallet.sol:55"
          },
          {
            "contract": "SkillWallet",
            "label": "validReqIds",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/main/SkillWallet.sol:58"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)4632_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(SWValidationRequest)8606_storage)": {
            "label": "mapping(bytes32 => struct Types.SWValidationRequest)"
          },
          "t_struct(SWValidationRequest)8606_storage": {
            "label": "struct Types.SWValidationRequest",
            "members": [
              {
                "label": "caller",
                "type": "t_address"
              },
              {
                "label": "action",
                "type": "t_enum(Action)8599"
              },
              {
                "label": "params",
                "type": "t_struct(Params)8616_storage"
              }
            ]
          },
          "t_enum(Action)8599": {
            "label": "enum Types.Action",
            "members": [
              "Activate",
              "Login",
              "CreateGig",
              "TakeGig",
              "SubmitGig",
              "CompleteGig"
            ]
          },
          "t_struct(Params)8616_storage": {
            "label": "struct Types.Params",
            "members": [
              {
                "label": "stringParams",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "intParams",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "addressParams",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)5629_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)5629_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5243_storage"
              }
            ]
          },
          "t_struct(Set)5243_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5006_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4688_storage"
              }
            ]
          },
          "t_struct(Map)4688_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4680_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)4680_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)4680_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6dab296309a95654dbcd7da7cd0155a8e6244a9c31d0c8b32f5d754b3670678e": {
      "address": "0xF6Cc0c3a86C5AAc94F0025FbB746BCb144449BD3",
      "txHash": "0x7ee8ebfa40b5486bf2ccf4c3718597ff0d788d8a63c2cc8a397af0bbe9f8d94b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)5629_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5006_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "SkillWallet",
            "label": "_activeCommunities",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/main/SkillWallet.sol:33"
          },
          {
            "contract": "SkillWallet",
            "label": "_communityHistory",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "src": "contracts/main/SkillWallet.sol:36"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletsByOwner",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:39"
          },
          {
            "contract": "SkillWallet",
            "label": "_activatedSkillWallets",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/main/SkillWallet.sol:42"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletToPubKey",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/main/SkillWallet.sol:44"
          },
          {
            "contract": "SkillWallet",
            "label": "skillWalletClaimers",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/main/SkillWallet.sol:46"
          },
          {
            "contract": "SkillWallet",
            "label": "_skillWalletCounter",
            "type": "t_struct(Counter)4632_storage",
            "src": "contracts/main/SkillWallet.sol:48"
          },
          {
            "contract": "SkillWallet",
            "label": "oracle",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:50"
          },
          {
            "contract": "SkillWallet",
            "label": "jobId",
            "type": "t_bytes32",
            "src": "contracts/main/SkillWallet.sol:51"
          },
          {
            "contract": "SkillWallet",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/main/SkillWallet.sol:52"
          },
          {
            "contract": "SkillWallet",
            "label": "osmAddress",
            "type": "t_address",
            "src": "contracts/main/SkillWallet.sol:53"
          },
          {
            "contract": "SkillWallet",
            "label": "clReqIdToValidationRequest",
            "type": "t_mapping(t_bytes32,t_struct(SWValidationRequest)8606_storage)",
            "src": "contracts/main/SkillWallet.sol:55"
          },
          {
            "contract": "SkillWallet",
            "label": "validReqIds",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/main/SkillWallet.sol:58"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Counter)4632_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(SWValidationRequest)8606_storage)": {
            "label": "mapping(bytes32 => struct Types.SWValidationRequest)"
          },
          "t_struct(SWValidationRequest)8606_storage": {
            "label": "struct Types.SWValidationRequest",
            "members": [
              {
                "label": "caller",
                "type": "t_address"
              },
              {
                "label": "action",
                "type": "t_enum(Action)8599"
              },
              {
                "label": "params",
                "type": "t_struct(Params)8616_storage"
              }
            ]
          },
          "t_enum(Action)8599": {
            "label": "enum Types.Action",
            "members": [
              "Activate",
              "Login",
              "CreateGig",
              "TakeGig",
              "SubmitGig",
              "CompleteGig"
            ]
          },
          "t_struct(Params)8616_storage": {
            "label": "struct Types.Params",
            "members": [
              {
                "label": "stringParams",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "intParams",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "addressParams",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)5629_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)5629_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5243_storage"
              }
            ]
          },
          "t_struct(Set)5243_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5006_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4688_storage"
              }
            ]
          },
          "t_struct(Map)4688_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4680_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)4680_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)4680_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
